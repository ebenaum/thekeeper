// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: event.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_EventTypePermission   EventType = 0
	EventType_EventTypeSeedPlayer   EventType = 1
	EventType_EventTypeSeedActor    EventType = 2
	EventType_EventTypePlayerPerson EventType = 3
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "EventTypePermission",
		1: "EventTypeSeedPlayer",
		2: "EventTypeSeedActor",
		3: "EventTypePlayerPerson",
	}
	EventType_value = map[string]int32{
		"EventTypePermission":   0,
		"EventTypeSeedPlayer":   1,
		"EventTypeSeedActor":    2,
		"EventTypePlayerPerson": 3,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_event_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_event_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{0}
}

type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Ts    int64                  `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	// Types that are valid to be assigned to Msg:
	//
	//	*Event_Permission
	//	*Event_SeedPlayer
	//	*Event_SeedActor
	//	*Event_PlayerPerson
	Msg           isEvent_Msg `protobuf_oneof:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *Event) GetMsg() isEvent_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *Event) GetPermission() *EventPermission {
	if x != nil {
		if x, ok := x.Msg.(*Event_Permission); ok {
			return x.Permission
		}
	}
	return nil
}

func (x *Event) GetSeedPlayer() *EventSeedPlayer {
	if x != nil {
		if x, ok := x.Msg.(*Event_SeedPlayer); ok {
			return x.SeedPlayer
		}
	}
	return nil
}

func (x *Event) GetSeedActor() *EventSeedActor {
	if x != nil {
		if x, ok := x.Msg.(*Event_SeedActor); ok {
			return x.SeedActor
		}
	}
	return nil
}

func (x *Event) GetPlayerPerson() *EventPlayerPerson {
	if x != nil {
		if x, ok := x.Msg.(*Event_PlayerPerson); ok {
			return x.PlayerPerson
		}
	}
	return nil
}

type isEvent_Msg interface {
	isEvent_Msg()
}

type Event_Permission struct {
	Permission *EventPermission `protobuf:"bytes,2,opt,name=Permission,proto3,oneof"`
}

type Event_SeedPlayer struct {
	SeedPlayer *EventSeedPlayer `protobuf:"bytes,3,opt,name=SeedPlayer,proto3,oneof"`
}

type Event_SeedActor struct {
	SeedActor *EventSeedActor `protobuf:"bytes,4,opt,name=SeedActor,proto3,oneof"`
}

type Event_PlayerPerson struct {
	PlayerPerson *EventPlayerPerson `protobuf:"bytes,5,opt,name=PlayerPerson,proto3,oneof"`
}

func (*Event_Permission) isEvent_Msg() {}

func (*Event_SeedPlayer) isEvent_Msg() {}

func (*Event_SeedActor) isEvent_Msg() {}

func (*Event_PlayerPerson) isEvent_Msg() {}

type Events struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*Event               `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Events) Reset() {
	*x = Events{}
	mi := &file_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Events) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Events) ProtoMessage() {}

func (x *Events) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Events.ProtoReflect.Descriptor instead.
func (*Events) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{1}
}

func (x *Events) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

var File_event_proto protoreflect.FileDescriptor

var file_event_proto_rawDesc = string([]byte{
	0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x74,
	0x68, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x1a, 0x10, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x73, 0x65, 0x65, 0x64,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x73,
	0x65, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x13, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99, 0x02, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x73, 0x12, 0x3c,
	0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x68, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0a,
	0x53, 0x65, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x74, 0x68, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a,
	0x53, 0x65, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x09, 0x53, 0x65,
	0x65, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x74, 0x68, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x65, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x09, 0x53, 0x65, 0x65, 0x64,
	0x41, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x68,
	0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x32, 0x0a, 0x06, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x68, 0x65,
	0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2a, 0x70, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x53, 0x65, 0x65, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x10, 0x03, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x62, 0x65, 0x6e, 0x61, 0x75, 0x6d, 0x2f, 0x74, 0x68, 0x65,
	0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_event_proto_rawDescOnce sync.Once
	file_event_proto_rawDescData []byte
)

func file_event_proto_rawDescGZIP() []byte {
	file_event_proto_rawDescOnce.Do(func() {
		file_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_event_proto_rawDesc), len(file_event_proto_rawDesc)))
	})
	return file_event_proto_rawDescData
}

var file_event_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_event_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_event_proto_goTypes = []any{
	(EventType)(0),            // 0: thekeeper.EventType
	(*Event)(nil),             // 1: thekeeper.Event
	(*Events)(nil),            // 2: thekeeper.Events
	(*EventPermission)(nil),   // 3: thekeeper.EventPermission
	(*EventSeedPlayer)(nil),   // 4: thekeeper.EventSeedPlayer
	(*EventSeedActor)(nil),    // 5: thekeeper.EventSeedActor
	(*EventPlayerPerson)(nil), // 6: thekeeper.EventPlayerPerson
}
var file_event_proto_depIdxs = []int32{
	3, // 0: thekeeper.Event.Permission:type_name -> thekeeper.EventPermission
	4, // 1: thekeeper.Event.SeedPlayer:type_name -> thekeeper.EventSeedPlayer
	5, // 2: thekeeper.Event.SeedActor:type_name -> thekeeper.EventSeedActor
	6, // 3: thekeeper.Event.PlayerPerson:type_name -> thekeeper.EventPlayerPerson
	1, // 4: thekeeper.Events.events:type_name -> thekeeper.Event
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_event_proto_init() }
func file_event_proto_init() {
	if File_event_proto != nil {
		return
	}
	file_permission_proto_init()
	file_seed_player_proto_init()
	file_seed_actor_proto_init()
	file_player_person_proto_init()
	file_event_proto_msgTypes[0].OneofWrappers = []any{
		(*Event_Permission)(nil),
		(*Event_SeedPlayer)(nil),
		(*Event_SeedActor)(nil),
		(*Event_PlayerPerson)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_event_proto_rawDesc), len(file_event_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_event_proto_goTypes,
		DependencyIndexes: file_event_proto_depIdxs,
		EnumInfos:         file_event_proto_enumTypes,
		MessageInfos:      file_event_proto_msgTypes,
	}.Build()
	File_event_proto = out.File
	file_event_proto_goTypes = nil
	file_event_proto_depIdxs = nil
}
