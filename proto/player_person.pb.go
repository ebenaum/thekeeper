// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v6.30.2
// source: player_person.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventPlayerPerson struct {
	state                         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId                      string                 `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	Surname                       string                 `protobuf:"bytes,2,opt,name=surname,proto3" json:"surname,omitempty"`
	Age                           string                 `protobuf:"bytes,3,opt,name=age,proto3" json:"age,omitempty"`
	CityOfOrigin                  string                 `protobuf:"bytes,4,opt,name=cityOfOrigin,proto3" json:"cityOfOrigin,omitempty"`
	Contact                       string                 `protobuf:"bytes,5,opt,name=contact,proto3" json:"contact,omitempty"`
	EmergencyContact              string                 `protobuf:"bytes,6,opt,name=emergencyContact,proto3" json:"emergencyContact,omitempty"`
	Health                        string                 `protobuf:"bytes,7,opt,name=health,proto3" json:"health,omitempty"`
	AdditionalInformation         string                 `protobuf:"bytes,8,opt,name=additionalInformation,proto3" json:"additionalInformation,omitempty"`
	PeopleToPlayWith              string                 `protobuf:"bytes,9,opt,name=peopleToPlayWith,proto3" json:"peopleToPlayWith,omitempty"`
	Skills                        string                 `protobuf:"bytes,10,opt,name=skills,proto3" json:"skills,omitempty"`
	UseExistingCharacter          bool                   `protobuf:"varint,11,opt,name=useExistingCharacter,proto3" json:"useExistingCharacter,omitempty"`
	ApprovedConditions            bool                   `protobuf:"varint,12,opt,name=approvedConditions,proto3" json:"approvedConditions,omitempty"`
	ExistingCharacterAchievements string                 `protobuf:"bytes,13,opt,name=existingCharacterAchievements,proto3" json:"existingCharacterAchievements,omitempty"`
	GameStyle                     string                 `protobuf:"bytes,14,opt,name=gameStyle,proto3" json:"gameStyle,omitempty"`
	GameStyleTags                 []string               `protobuf:"bytes,15,rep,name=gameStyleTags,proto3" json:"gameStyleTags,omitempty"`
	SituationToAvoid              string                 `protobuf:"bytes,16,opt,name=situationToAvoid,proto3" json:"situationToAvoid,omitempty"`
	InscriptionType               string                 `protobuf:"bytes,17,opt,name=inscriptionType,proto3" json:"inscriptionType,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *EventPlayerPerson) Reset() {
	*x = EventPlayerPerson{}
	mi := &file_player_person_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventPlayerPerson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPlayerPerson) ProtoMessage() {}

func (x *EventPlayerPerson) ProtoReflect() protoreflect.Message {
	mi := &file_player_person_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPlayerPerson.ProtoReflect.Descriptor instead.
func (*EventPlayerPerson) Descriptor() ([]byte, []int) {
	return file_player_person_proto_rawDescGZIP(), []int{0}
}

func (x *EventPlayerPerson) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *EventPlayerPerson) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *EventPlayerPerson) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *EventPlayerPerson) GetCityOfOrigin() string {
	if x != nil {
		return x.CityOfOrigin
	}
	return ""
}

func (x *EventPlayerPerson) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *EventPlayerPerson) GetEmergencyContact() string {
	if x != nil {
		return x.EmergencyContact
	}
	return ""
}

func (x *EventPlayerPerson) GetHealth() string {
	if x != nil {
		return x.Health
	}
	return ""
}

func (x *EventPlayerPerson) GetAdditionalInformation() string {
	if x != nil {
		return x.AdditionalInformation
	}
	return ""
}

func (x *EventPlayerPerson) GetPeopleToPlayWith() string {
	if x != nil {
		return x.PeopleToPlayWith
	}
	return ""
}

func (x *EventPlayerPerson) GetSkills() string {
	if x != nil {
		return x.Skills
	}
	return ""
}

func (x *EventPlayerPerson) GetUseExistingCharacter() bool {
	if x != nil {
		return x.UseExistingCharacter
	}
	return false
}

func (x *EventPlayerPerson) GetApprovedConditions() bool {
	if x != nil {
		return x.ApprovedConditions
	}
	return false
}

func (x *EventPlayerPerson) GetExistingCharacterAchievements() string {
	if x != nil {
		return x.ExistingCharacterAchievements
	}
	return ""
}

func (x *EventPlayerPerson) GetGameStyle() string {
	if x != nil {
		return x.GameStyle
	}
	return ""
}

func (x *EventPlayerPerson) GetGameStyleTags() []string {
	if x != nil {
		return x.GameStyleTags
	}
	return nil
}

func (x *EventPlayerPerson) GetSituationToAvoid() string {
	if x != nil {
		return x.SituationToAvoid
	}
	return ""
}

func (x *EventPlayerPerson) GetInscriptionType() string {
	if x != nil {
		return x.InscriptionType
	}
	return ""
}

var File_player_person_proto protoreflect.FileDescriptor

var file_player_person_proto_rawDesc = string([]byte{
	0x0a, 0x13, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x74, 0x68, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72,
	0x22, 0x9b, 0x05, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x69, 0x74, 0x79, 0x4f, 0x66, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x69, 0x74, 0x79, 0x4f, 0x66, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x2a, 0x0a, 0x10,
	0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63,
	0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x12, 0x34, 0x0a, 0x15, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65,
	0x54, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x57, 0x69, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x54, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x57, 0x69,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x75, 0x73,
	0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x75, 0x73, 0x65, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x2e,
	0x0a, 0x12, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x44,
	0x0a, 0x1d, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54,
	0x61, 0x67, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x69, 0x74, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x41, 0x76, 0x6f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x73, 0x69, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x41,
	0x76, 0x6f, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69,
	0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x2a,
	0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x62, 0x65,
	0x6e, 0x61, 0x75, 0x6d, 0x2f, 0x74, 0x68, 0x65, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_player_person_proto_rawDescOnce sync.Once
	file_player_person_proto_rawDescData []byte
)

func file_player_person_proto_rawDescGZIP() []byte {
	file_player_person_proto_rawDescOnce.Do(func() {
		file_player_person_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_player_person_proto_rawDesc), len(file_player_person_proto_rawDesc)))
	})
	return file_player_person_proto_rawDescData
}

var file_player_person_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_player_person_proto_goTypes = []any{
	(*EventPlayerPerson)(nil), // 0: thekeeper.EventPlayerPerson
}
var file_player_person_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_player_person_proto_init() }
func file_player_person_proto_init() {
	if File_player_person_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_player_person_proto_rawDesc), len(file_player_person_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_player_person_proto_goTypes,
		DependencyIndexes: file_player_person_proto_depIdxs,
		MessageInfos:      file_player_person_proto_msgTypes,
	}.Build()
	File_player_person_proto = out.File
	file_player_person_proto_goTypes = nil
	file_player_person_proto_depIdxs = nil
}
